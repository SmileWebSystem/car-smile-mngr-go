<?xml version='1.0' encoding='UTF-8'?>
<S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/">
    <S:Body>
        <ns0:ConsultaSisaResponse xmlns:ns2="http://services.segurosbolivar.com/simon/common/schema/1.0" xmlns:ns0="http://www.segurosbolivar.com/simon/fasecolda/1.0">
            <DataHeader>
                <codRespuesta>0</codRespuesta>
            </DataHeader>
            <Data>
                <historicoPolizasSisa>
                    <CodigoCompania>161</CodigoCompania>
                    <NombreCompania>MAPFRE</NombreCompania>
                    <NumeroPoliza>1704120000753</NumeroPoliza>
                    <Orden>0</Orden>
                    <Placa>EDX806</Placa>
                    <Motor>F6681702</Motor>
                    <Chasis>WBA4H3100JBB51825</Chasis>
                    <FechaVigencia>2021-07-07T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2022-07-07T00:00:00.0</FechaFinVigencia>
                    <Vigente>SI</Vigente>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>9727414</NumeroDocumento>
                    <Asegurado>PALACIO AGUIRRE JUAN MANUEL</Asegurado>
                    <ValorAsegurado>111300000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>NO</RC>
                    <TipoCruce>Cruzo por placa  - 264/1</TipoCruce>
                    <TipoDocumentoTomador>CÉDULA DE CIUDADANIA</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>9727414</NumeroDocumentoTomador>
                    <NombreTomador>PALACIO AGUIRRE JUAN MANUEL</NombreTomador>
                    <TipoDocumentoBeneficiario>CÉDULA DE CIUDADANIA</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>PALACIO AGUIRRE JUAN MANUEL</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>9727414</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>211</CodigoCompania>
                    <NombreCompania>ALLIANZ</NombreCompania>
                    <NumeroPoliza>22165080</NumeroPoliza>
                    <Orden>21</Orden>
                    <Placa>EDX806</Placa>
                    <Motor>F6681702</Motor>
                    <Chasis>WBA4H3100JBB51825</Chasis>
                    <FechaVigencia>2017-12-22T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2018-10-01T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO / 22/12/17</Vigente>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <Servicio>SIN INFORMACION</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1130616342</NumeroDocumento>
                    <Asegurado>GIRALDO TRUJILLO LUKAS FELIPE</Asegurado>
                    <ValorAsegurado>137100000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 0/.78</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>900049708</NumeroDocumentoTomador>
                    <NombreTomador>FONDO EMPLEADOS DE GLAXOSMITHK</NombreTomador>
                    <TipoDocumentoBeneficiario>TARJETA DE IDENTIDAD</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>GLAXO SMITHLINE COLOMBIA S.A</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>8300129694</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>211</CodigoCompania>
                    <NombreCompania>ALLIANZ</NombreCompania>
                    <NumeroPoliza>22165080</NumeroPoliza>
                    <Orden>28</Orden>
                    <Placa>EDX806</Placa>
                    <Motor>F6681702</Motor>
                    <Chasis>WBA4H3100JBB51825</Chasis>
                    <FechaVigencia>2017-12-22T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2018-10-01T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO / 20/09/18</Vigente>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <Servicio>SIN INFORMACION</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1130616342</NumeroDocumento>
                    <Asegurado>GIRALDO TRUJILLO LUKAS FELIPE</Asegurado>
                    <ValorAsegurado>137100000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 272/.78</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>900049708</NumeroDocumentoTomador>
                    <NombreTomador>FONDO EMPLEADOS DE GLAXOSMITHK</NombreTomador>
                    <TipoDocumentoBeneficiario>TARJETA DE IDENTIDAD</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>GLAXO SMITHLINE COLOMBIA S.A</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>8300129694</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>161</CodigoCompania>
                    <NombreCompania>MAPFRE</NombreCompania>
                    <NumeroPoliza>1704120000753</NumeroPoliza>
                    <Orden>0</Orden>
                    <Placa>EDX806</Placa>
                    <Motor>F6681702</Motor>
                    <Chasis>WBA4H3100JBB51825</Chasis>
                    <FechaVigencia>2020-12-28T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2021-07-07T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>9727414</NumeroDocumento>
                    <Asegurado>PALACIO AGUIRRE JUAN MANUEL</Asegurado>
                    <ValorAsegurado>111300000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>NO</RC>
                    <TipoCruce>Cruzo por placa  - 191/.52</TipoCruce>
                    <TipoDocumentoTomador>CÉDULA DE CIUDADANIA</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>9727414</NumeroDocumentoTomador>
                    <NombreTomador>PALACIO AGUIRRE JUAN MANUEL</NombreTomador>
                    <TipoDocumentoBeneficiario>CÉDULA DE CIUDADANIA</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>PALACIO AGUIRRE JUAN MANUEL</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>9727414</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>151</CodigoCompania>
                    <NombreCompania>BOLIVAR</NombreCompania>
                    <NumeroPoliza>1020492931403</NumeroPoliza>
                    <Orden>1</Orden>
                    <Placa>EDX806</Placa>
                    <Motor>F6681702</Motor>
                    <Chasis>WBA4H3100JBB51825</Chasis>
                    <FechaVigencia>2020-09-18T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2020-12-23T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1130616342</NumeroDocumento>
                    <Asegurado>LUKAS FELIPE GIRALDO TRUJILLO</Asegurado>
                    <ValorAsegurado>111470000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 96/.26</TipoCruce>
                    <TipoDocumentoTomador>CÉDULA DE CIUDADANIA</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>1130616342</NumeroDocumentoTomador>
                    <NombreTomador>LUKAS FELIPE GIRALDO TRUJILLO</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>151</CodigoCompania>
                    <NombreCompania>BOLIVAR</NombreCompania>
                    <NumeroPoliza>1020492931402</NumeroPoliza>
                    <Orden>1</Orden>
                    <Placa>EDX806</Placa>
                    <Motor>F6681702</Motor>
                    <Chasis>WBA4H3100JBB51825</Chasis>
                    <FechaVigencia>2019-09-18T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2020-09-18T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1130616342</NumeroDocumento>
                    <Asegurado>LUKAS FELIPE GIRALDO TRUJILLO</Asegurado>
                    <ValorAsegurado>131970000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 366/1</TipoCruce>
                    <TipoDocumentoTomador>CÉDULA DE CIUDADANIA</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>1130616342</NumeroDocumentoTomador>
                    <NombreTomador>LUKAS FELIPE GIRALDO TRUJILLO</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>151</CodigoCompania>
                    <NombreCompania>BOLIVAR</NombreCompania>
                    <NumeroPoliza>1020492931401</NumeroPoliza>
                    <Orden>1</Orden>
                    <Placa>EDX806</Placa>
                    <Motor>F6681702</Motor>
                    <Chasis>WBA4H3100JBB51825</Chasis>
                    <FechaVigencia>2018-09-18T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2019-09-18T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1130616342</NumeroDocumento>
                    <Asegurado>LUKAS FELIPE GIRALDO TRUJILLO</Asegurado>
                    <ValorAsegurado>131970000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 365/1</TipoCruce>
                    <TipoDocumentoTomador>CÉDULA DE CIUDADANIA</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>1130616342</NumeroDocumentoTomador>
                    <NombreTomador>LUKAS FELIPE GIRALDO TRUJILLO</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>151</CodigoCompania>
                    <NombreCompania>BOLIVAR</NombreCompania>
                    <NumeroPoliza>1000488592411</NumeroPoliza>
                    <Orden>660</Orden>
                    <Placa>EDX806</Placa>
                    <Motor>F6681702</Motor>
                    <Chasis>WBA4H3100JBB51825</Chasis>
                    <FechaVigencia>2017-12-31T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2018-12-31T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1130616342</NumeroDocumento>
                    <Asegurado>LUKAS FELIPE GIRALDO TRUJILLO</Asegurado>
                    <ValorAsegurado>137100000</ValorAsegurado>
                    <PTD>NO</PTD>
                    <PPD>NO</PPD>
                    <PH>NO</PH>
                    <PPH>NO</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 365/1</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>830012969</NumeroDocumentoTomador>
                    <NombreTomador>GLAXOSMITHKLINE COLOMBIA S.A</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>151</CodigoCompania>
                    <NombreCompania>BOLIVAR</NombreCompania>
                    <NumeroPoliza>1000488592410</NumeroPoliza>
                    <Orden>661</Orden>
                    <Placa>EDX806</Placa>
                    <Motor>F6681702</Motor>
                    <Chasis>WBA4H3100JBB51825</Chasis>
                    <FechaVigencia>2017-12-22T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2017-12-31T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <Servicio>OTRO</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1130616342</NumeroDocumento>
                    <Asegurado>LUKAS FELIPE GIRALDO TRUJILLO</Asegurado>
                    <ValorAsegurado>137100000</ValorAsegurado>
                    <PTD>NO</PTD>
                    <PPD>NO</PPD>
                    <PH>NO</PH>
                    <PPH>NO</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 9/.02</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>830012969</NumeroDocumentoTomador>
                    <NombreTomador>GLAXOSMITHKLINE COLOMBIA S.A</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <codigoWMISisa>
                    <CodigoWMI>WBA</CodigoWMI>
                    <NombreFabricante>Bayerische Motoren Werke AG</NombreFabricante>
                    <Direccion1Fabricante>Muenchen 13</Direccion1Fabricante>
                    <Direccion2Fabricante>Muenchen 13</Direccion2Fabricante>
                    <FechaCreacion>1998-02-12T00:00:00.0</FechaCreacion>
                    <FechaModificacion>2008-02-05T00:00:00.0</FechaModificacion>
                    <Pais>Germany</Pais>
                </codigoWMISisa>
                <guiaSisa>
                    <Marca>BMW</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>420i F36 Gran Coupe TP 2000CC T CT</Tipo>
                    <Modelo>2018</Modelo>
                    <ValorActual>111300000</ValorActual>
                    <ValorInicio>111300000</ValorInicio>
                    <FechaGuia>march/2022</FechaGuia>
                    <CodigoGuia>00801368</CodigoGuia>
                    <Guia>307</Guia>
                </guiaSisa>
                <SIMITSisa>
                    <Secretaria>76147000 Cartago</Secretaria>
                    <FechaComparendo>2021-02-01T00:00:00.0</FechaComparendo>
                    <Numero>76147000000029729539</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>279717</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>447548</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>63130000 Calarca</Secretaria>
                    <FechaComparendo>2019-09-29T00:00:00.0</FechaComparendo>
                    <Numero>99999999000004019826</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>258786</Valor>
                    <CodigoInfraccion>C38 Usar sistemas móviles de comunicación o teléfonos instalados en los vehículos al momento de conducir, exceptuando si éstos son utilizados con accesorios o equipos auxiliares que permitan tener las manos libres.</CodigoInfraccion>
                    <ValorInfraccion>414058</ValorInfraccion>
                    <Polca>S</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>70215000 Corozal</Secretaria>
                    <FechaComparendo>2018-04-06T00:00:00.0</FechaComparendo>
                    <Numero>70215000000018882944</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>390621</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>390621</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>13052000 Arjona</Secretaria>
                    <FechaComparendo>2018-04-01T00:00:00.0</FechaComparendo>
                    <Numero>13052000000020049155</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>390621</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>390621</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>17380000 La Dorada</Secretaria>
                    <FechaComparendo>2018-03-31T00:00:00.0</FechaComparendo>
                    <Numero>17380000000019484129</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>390621</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>390621</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>17380000 La Dorada</Secretaria>
                    <FechaComparendo>2014-12-22T00:00:00.0</FechaComparendo>
                    <Numero>DOR0004080</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>308000</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>308000</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>05001000 Medellin</Secretaria>
                    <FechaComparendo>2012-12-10T00:00:00.0</FechaComparendo>
                    <Numero>05001000000003821651</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>283350</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>05001000 Medellin</Secretaria>
                    <FechaComparendo>2012-11-23T00:00:00.0</FechaComparendo>
                    <Numero>05001000000003808576</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>283350</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>05001000 Medellin</Secretaria>
                    <FechaComparendo>2012-11-20T00:00:00.0</FechaComparendo>
                    <Numero>05001000000003810445</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>D04 No detenerse ante una luz roja o amarilla de semáforo, una señal de PARE o un semáforo intermitente en rojo.</CodigoInfraccion>
                    <ValorInfraccion>566700</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>05001000 Medellin</Secretaria>
                    <FechaComparendo>2012-01-03T00:00:00.0</FechaComparendo>
                    <Numero>05001000000002301388</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>283350</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>283350</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2006-03-30T00:00:00.0</FechaComparendo>
                    <Numero>11422321</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN MANUEL PALACIO AGUIRRE</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>408000</Valor>
                    <CodigoInfraccion>81 Conducir realizando maniobras altamente peligrosas e irresponsables que pongan en peligro a las personas o las cosas.</CodigoInfraccion>
                    <ValorInfraccion>408000</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2004-08-19T00:00:00.0</FechaComparendo>
                    <Numero>10472136</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>JUAN M. PALACIO A.</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>57 Conducir motocicleta sin observar las normas establecidas en el presente código.</CodigoInfraccion>
                    <ValorInfraccion>0</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <analisisContinuidades>
                    <contiCambioCompania>false</contiCambioCompania>
                    <msgReglaCambioCompania>No cumple con la regla uso y tipo vehículo.</msgReglaCambioCompania>
                    <contiCambioAsegurado>false</contiCambioAsegurado>
                    <msgReglaCambioAsegurado>No cumple con la regla de compania.</msgReglaCambioAsegurado>
                </analisisContinuidades>
            </Data>
        </ns0:ConsultaSisaResponse>
    </S:Body>
</S:Envelope>