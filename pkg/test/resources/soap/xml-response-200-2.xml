<?xml version='1.0' encoding='UTF-8'?>
<S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/">
    <S:Body>
        <ns0:ConsultaSisaResponse xmlns:ns1="http://services.segurosbolivar.com/simon/common/schema/1.0" xmlns:ns0="http://www.segurosbolivar.com/simon/fasecolda/1.0">
            <DataHeader>
                <codRespuesta>0</codRespuesta>
            </DataHeader>
            <Data>
                <historicoPolizasSisa>
                    <CodigoCompania>451</CodigoCompania>
                    <NombreCompania>SURAMERICANA</NombreCompania>
                    <NumeroPoliza>40005589279</NumeroPoliza>
                    <Orden>493</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaVigencia>2016-09-30T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2017-08-01T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO / 30/11/16</Vigente>
                    <CodigoGuia>05601117</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA0 ALL NEW TP 2000CC</Tipo>
                    <Modelo>2013</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1152186929</NumeroDocumento>
                    <Asegurado>BEDOYA ZULUAGA  VANESSA TATIANA</Asegurado>
                    <ValorAsegurado>39655000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 61/.84</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>8909362787</NumeroDocumentoTomador>
                    <NombreTomador>FONDO DE EMPLEADOS DEL H.P.T.U</NombreTomador>
                    <TipoDocumentoBeneficiario>CÉDULA DE CIUDADANIA</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>BEDOYA ZULUAGA  VANESSA TATIANA</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>1152186929</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>451</CodigoCompania>
                    <NombreCompania>SURAMERICANA</NombreCompania>
                    <NumeroPoliza>40005464533</NumeroPoliza>
                    <Orden>714</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaVigencia>2016-12-01T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2017-11-30T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO / 22/12/16</Vigente>
                    <CodigoGuia>05601117</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA0 ALL NEW TP 2000CC</Tipo>
                    <Modelo>2013</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1152186929</NumeroDocumento>
                    <Asegurado>BEDOYA ZULUAGA  VANESSA TATIANA</Asegurado>
                    <ValorAsegurado>44203500</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 21/1</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>9001533851</NumeroDocumentoTomador>
                    <NombreTomador>FONDO DE EMPLEADOS DE AVON COLOMBIA S.A.S.</NombreTomador>
                    <TipoDocumentoBeneficiario>CÉDULA DE CIUDADANIA</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>BEDOYA ZULUAGA  VANESSA TATIANA</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>1152186929</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>211</CodigoCompania>
                    <NombreCompania>ALLIANZ</NombreCompania>
                    <NumeroPoliza>21974541</NumeroPoliza>
                    <Orden>737</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaVigencia>2016-09-01T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2017-09-01T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO / 01/10/16</Vigente>
                    <CodigoGuia>05601117</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA0 ALL NEW TP 2000CC</Tipo>
                    <Modelo>2013</Modelo>
                    <Servicio>SIN INFORMACION</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1152186929</NumeroDocumento>
                    <Asegurado>BEDOYA ZULUAGA, VANESSA TATIAN</Asegurado>
                    <ValorAsegurado>38500000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 30/1</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>800112808</NumeroDocumentoTomador>
                    <NombreTomador>FONDO DE EMPLEADOS DOCENTES DE</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>211</CodigoCompania>
                    <NombreCompania>ALLIANZ</NombreCompania>
                    <NumeroPoliza>21811831</NumeroPoliza>
                    <Orden>556</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaVigencia>2016-08-01T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2016-09-01T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO / 01/09/16</Vigente>
                    <CodigoGuia>05601117</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA0 ALL NEW TP 2000CC</Tipo>
                    <Modelo>2013</Modelo>
                    <Servicio>SIN INFORMACION</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1152186929</NumeroDocumento>
                    <Asegurado>BEDOYA ZULUAGA, VANESSA TATIAN</Asegurado>
                    <ValorAsegurado>38500000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 31/.08</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>800112808</NumeroDocumentoTomador>
                    <NombreTomador>FONDO DE EMPLEADOS DOCENTES DE</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>431</CodigoCompania>
                    <NombreCompania>AXA COLPATRIA</NombreCompania>
                    <NumeroPoliza>1122237</NumeroPoliza>
                    <Orden>0</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaVigencia>2019-09-27T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2020-09-27T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>05601132</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA3 HIGH TP 2000CC CT TC</Tipo>
                    <Modelo>2013</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>94542631</NumeroDocumento>
                    <Asegurado>AGUDELO FREDY HUMBERTO</Asegurado>
                    <ValorAsegurado>37900000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 366/1</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>9000479818</NumeroDocumentoTomador>
                    <NombreTomador>BANCO FALABELLA S.A</NombreTomador>
                    <TipoDocumentoBeneficiario>CÉDULA DE CIUDADANIA</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>AGUDELO FREDY HUMBERTO</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>94542631</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>151</CodigoCompania>
                    <NombreCompania>BOLIVAR</NombreCompania>
                    <NumeroPoliza>5137630354302</NumeroPoliza>
                    <Orden>1</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaVigencia>2019-07-10T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2019-10-10T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>05601132</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA3 HIGH TP 2000CC CT TC</Tipo>
                    <Modelo>2013</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>94542631</NumeroDocumento>
                    <Asegurado>FREDY HUMBERTO AGUDELO SALAZAR</Asegurado>
                    <ValorAsegurado>38070000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 92/.25</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>860034313</NumeroDocumentoTomador>
                    <NombreTomador>BANCO DAVIVIENDA S.A.</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>151</CodigoCompania>
                    <NombreCompania>BOLIVAR</NombreCompania>
                    <NumeroPoliza>5137630354301</NumeroPoliza>
                    <Orden>1</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaVigencia>2018-07-10T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2019-07-10T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>05601132</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA3 HIGH TP 2000CC CT TC</Tipo>
                    <Modelo>2013</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>94542631</NumeroDocumento>
                    <Asegurado>FREDY HUMBERTO AGUDELO SALAZAR</Asegurado>
                    <ValorAsegurado>42970000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 365/1</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>860034313</NumeroDocumentoTomador>
                    <NombreTomador>BANCO DAVIVIENDA S.A.</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>151</CodigoCompania>
                    <NombreCompania>BOLIVAR</NombreCompania>
                    <NumeroPoliza>1010497020802</NumeroPoliza>
                    <Orden>1</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaVigencia>2018-03-02T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2019-03-02T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>05601132</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA3 HIGH TP 2000CC CT TC</Tipo>
                    <Modelo>2013</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>1152453508</NumeroDocumento>
                    <Asegurado>RONALD ESTIBEN ESPINOSA MUNOZ</Asegurado>
                    <ValorAsegurado>44340000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 365/1</TipoCruce>
                    <TipoDocumentoTomador>CÉDULA DE CIUDADANIA</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>1152453508</NumeroDocumentoTomador>
                    <NombreTomador>RONALD ESTIBEN ESPINOSA MUNOZ</NombreTomador>
                    <TipoDocumentoBeneficiario>SIN INFORMACIÓN</TipoDocumentoBeneficiario>
                    <NombreBeneficiario></NombreBeneficiario>
                    <NumeroDocumentoBeneficiario></NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoSiniestrosSisa>
                    <CodigoCompania>431</CodigoCompania>
                    <NombreCompania>AXA COLPATRIA</NombreCompania>
                    <NumeroSiniestro>136244</NumeroSiniestro>
                    <NumeroPoliza>1122237</NumeroPoliza>
                    <Orden>0</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaSiniestro>2019-11-09T00:00:00.0</FechaSiniestro>
                    <CodigoGuia>05601132</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA3 HIGH TP 2000CC CT TC</Tipo>
                    <Modelo>2013</Modelo>
                    <TipoDocumentoAsegurado>CÉDULA DE CIUDADANIA</TipoDocumentoAsegurado>
                    <NumeroDocumento>94542631</NumeroDocumento>
                    <Asegurado>AGUDELO FREDY HUMBERTO</Asegurado>
                    <ValorAsegurado>37900000</ValorAsegurado>
                    <TipoCruce>Cruzo por placa </TipoCruce>
                    <Amparos>
                        <CodigoCompania>431</CodigoCompania>
                        <NumeroSiniestro>136244</NumeroSiniestro>
                        <FechaSiniestro>2019-11-09T00:00:00.0</FechaSiniestro>
                        <Placa>MSP066</Placa>
                        <Estado>CERRADO-TERMINADO</Estado>
                        <NombreAmparado>PPD</NombreAmparado>
                        <ValorReclamaAmparo>2125241</ValorReclamaAmparo>
                        <ValorPagadoAmparo>2125241</ValorPagadoAmparo>
                        <FechaAviso>2019-11-13T00:00:00.0</FechaAviso>
                    </Amparos>
                </historicoSiniestrosSisa>
                <historicoSiniestrosSisa>
                    <CodigoCompania>151</CodigoCompania>
                    <NombreCompania>BOLIVAR</NombreCompania>
                    <NumeroSiniestro>10100072287</NumeroSiniestro>
                    <NumeroPoliza>1010497020802</NumeroPoliza>
                    <Orden>1</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaSiniestro>2018-03-06T00:00:00.0</FechaSiniestro>
                    <CodigoGuia>05601132</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA3 HIGH TP 2000CC CT TC</Tipo>
                    <Modelo>2013</Modelo>
                    <TipoDocumentoAsegurado>CÉDULA DE CIUDADANIA</TipoDocumentoAsegurado>
                    <NumeroDocumento>1152453508</NumeroDocumento>
                    <Asegurado>RONALD ESTIBEN ESPINOSA MUNOZ</Asegurado>
                    <ValorAsegurado>44340000</ValorAsegurado>
                    <TipoCruce>Cruzo por placa </TipoCruce>
                    <Amparos>
                        <CodigoCompania>151</CodigoCompania>
                        <NumeroSiniestro>10100072287</NumeroSiniestro>
                        <FechaSiniestro>2018-03-06T00:00:00.0</FechaSiniestro>
                        <Placa>MSP066</Placa>
                        <Estado>PAGADO</Estado>
                        <NombreAmparado>OTROS</NombreAmparado>
                        <ValorReclamaAmparo>533712</ValorReclamaAmparo>
                        <ValorPagadoAmparo>533712</ValorPagadoAmparo>
                        <FechaAviso>2018-03-07T00:00:00.0</FechaAviso>
                    </Amparos>
                </historicoSiniestrosSisa>
                <historicoSiniestrosSisa>
                    <CodigoCompania>441</CodigoCompania>
                    <NombreCompania>LIBERTY</NombreCompania>
                    <NumeroSiniestro>AW 20140180000212</NumeroSiniestro>
                    <NumeroPoliza>4734</NumeroPoliza>
                    <Orden>552</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaSiniestro>2014-09-23T00:00:00.0</FechaSiniestro>
                    <CodigoGuia>05601132</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA3 HIGH TP 2000CC CT TC</Tipo>
                    <Modelo>2013</Modelo>
                    <TipoDocumentoAsegurado>CÉDULA DE CIUDADANIA</TipoDocumentoAsegurado>
                    <NumeroDocumento>71786933</NumeroDocumento>
                    <Asegurado>GIRALDO CHAVARRIAGA LUIS FERNA</Asegurado>
                    <ValorAsegurado>61615000</ValorAsegurado>
                    <TipoCruce>Cruzo por placa </TipoCruce>
                    <Amparos>
                        <CodigoCompania>441</CodigoCompania>
                        <NumeroSiniestro>AW 20140180000212</NumeroSiniestro>
                        <FechaSiniestro>2014-09-23T00:00:00.0</FechaSiniestro>
                        <Placa>MSP066</Placa>
                        <Estado>PAGADO</Estado>
                        <NombreAmparado>PPD</NombreAmparado>
                        <ValorReclamaAmparo>817545</ValorReclamaAmparo>
                        <ValorPagadoAmparo>817545</ValorPagadoAmparo>
                        <FechaAviso>2014-09-24T00:00:00.0</FechaAviso>
                    </Amparos>
                </historicoSiniestrosSisa>
                <historicoSiniestrosSisa>
                    <CodigoCompania>441</CodigoCompania>
                    <NombreCompania>LIBERTY</NombreCompania>
                    <NumeroSiniestro>AW 20140180000178</NumeroSiniestro>
                    <NumeroPoliza>4734</NumeroPoliza>
                    <Orden>552</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaSiniestro>2014-08-13T00:00:00.0</FechaSiniestro>
                    <CodigoGuia>05601132</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA3 HIGH TP 2000CC CT TC</Tipo>
                    <Modelo>2013</Modelo>
                    <TipoDocumentoAsegurado>CÉDULA DE CIUDADANIA</TipoDocumentoAsegurado>
                    <NumeroDocumento>71786933</NumeroDocumento>
                    <Asegurado>GIRALDO CHAVARRIAGA LUIS FERNA</Asegurado>
                    <ValorAsegurado>66015000</ValorAsegurado>
                    <TipoCruce>Cruzo por placa </TipoCruce>
                    <Amparos>
                        <CodigoCompania>441</CodigoCompania>
                        <NumeroSiniestro>AW 20140180000178</NumeroSiniestro>
                        <FechaSiniestro>2014-08-13T00:00:00.0</FechaSiniestro>
                        <Placa>MSP066</Placa>
                        <Estado>PAGADO</Estado>
                        <NombreAmparado>PPD</NombreAmparado>
                        <ValorReclamaAmparo>865350</ValorReclamaAmparo>
                        <ValorPagadoAmparo>865350</ValorPagadoAmparo>
                        <FechaAviso>2014-08-15T00:00:00.0</FechaAviso>
                    </Amparos>
                </historicoSiniestrosSisa>
                <historicoSiniestrosSisa>
                    <CodigoCompania>441</CodigoCompania>
                    <NombreCompania>LIBERTY</NombreCompania>
                    <NumeroSiniestro>AW 20130180000149</NumeroSiniestro>
                    <NumeroPoliza>4734</NumeroPoliza>
                    <Orden>552</Orden>
                    <Placa>MSP066</Placa>
                    <Motor>LF11364100</Motor>
                    <Chasis>9FCBL86L2D0102193</Chasis>
                    <FechaSiniestro>2013-05-08T00:00:00.0</FechaSiniestro>
                    <CodigoGuia>05601123</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXHA0 ALL NEW S TP 2000CC</Tipo>
                    <Modelo>2006</Modelo>
                    <TipoDocumentoAsegurado>CÉDULA DE CIUDADANIA</TipoDocumentoAsegurado>
                    <NumeroDocumento>71786933</NumeroDocumento>
                    <Asegurado>GIRALDO CHAVARRIAGA LUIS FERNA</Asegurado>
                    <ValorAsegurado>77115000</ValorAsegurado>
                    <TipoCruce>Cruzo por placa </TipoCruce>
                    <Amparos>
                        <CodigoCompania>441</CodigoCompania>
                        <NumeroSiniestro>AW 20130180000149</NumeroSiniestro>
                        <FechaSiniestro>2013-05-08T00:00:00.0</FechaSiniestro>
                        <Placa>MSP066</Placa>
                        <Estado>PAGADO</Estado>
                        <NombreAmparado>PPD</NombreAmparado>
                        <ValorReclamaAmparo>2312811</ValorReclamaAmparo>
                        <ValorPagadoAmparo>2312811</ValorPagadoAmparo>
                        <FechaAviso>2013-05-10T00:00:00.0</FechaAviso>
                    </Amparos>
                </historicoSiniestrosSisa>
                <codigoWMISisa>
                    <CodigoWMI>9FC</CodigoWMI>
                    <NombreFabricante>Compania Colombiana Automotiriz SA</NombreFabricante>
                    <Direccion1Fabricante>Operations V P</Direccion1Fabricante>
                    <Direccion2Fabricante>Calle 13 No 38 54</Direccion2Fabricante>
                    <FechaCreacion>1995-12-14T00:00:00.0</FechaCreacion>
                    <FechaModificacion>1998-10-27T00:00:00.0</FechaModificacion>
                    <Pais>Colombia</Pais>
                </codigoWMISisa>
                <guiaSisa>
                    <Marca>MAZDA</Marca>
                    <Clase>AUTOMOVIL</Clase>
                    <Tipo>3 LXNA3 HIGH TP 2000CC CT TC</Tipo>
                    <Modelo>2013</Modelo>
                    <ValorActual>45400000</ValorActual>
                    <ValorInicio>37900000</ValorInicio>
                    <FechaGuia>november/2022</FechaGuia>
                    <CodigoGuia>05601132</CodigoGuia>
                    <Guia>315</Guia>
                </guiaSisa>
                <SIMITSisa>
                    <Secretaria>05001000 Medellin</Secretaria>
                    <FechaComparendo>2019-10-19T00:00:00.0</FechaComparendo>
                    <Numero>05001000000024196688</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>VANESSA TATIANA BEDOYA ZULUAGA</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>C14 Transitar por sitios restringidos o en horas prohibidas por la autoridad competente. además, el vehículo será inmovilizado.</CodigoInfraccion>
                    <ValorInfraccion>414060</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <analisisContinuidades>
                    <contiCambioCompania>false</contiCambioCompania>
                    <msgReglaCambioCompania>No cumple con la regla de compania.</msgReglaCambioCompania>
                    <contiCambioAsegurado>false</contiCambioAsegurado>
                    <msgReglaCambioAsegurado>No cumple con la regla de compania.</msgReglaCambioAsegurado>
                </analisisContinuidades>
            </Data>
        </ns0:ConsultaSisaResponse>
    </S:Body>
</S:Envelope>