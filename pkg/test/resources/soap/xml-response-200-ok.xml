<?xml version='1.0' encoding='UTF-8'?>
<S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/">
    <S:Body>
        <ns0:ConsultaSisaResponse xmlns:ns2="http://services.segurosbolivar.com/simon/common/schema/1.0" xmlns:ns0="http://www.segurosbolivar.com/simon/fasecolda/1.0">
            <DataHeader>
                <codRespuesta>0</codRespuesta>
            </DataHeader>
            <Data>
                <historicoPolizasSisa>
                    <CodigoCompania>451</CodigoCompania>
                    <NombreCompania>SURAMERICANA</NombreCompania>
                    <NumeroPoliza>769612510946</NumeroPoliza>
                    <Orden>3</Orden>
                    <Placa>FYQ641</Placa>
                    <Motor>PE21229878</Motor>
                    <Chasis>JM7DK2W7AK1413106</Chasis>
                    <FechaVigencia>2022-02-11T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2023-02-11T00:00:00.0</FechaFinVigencia>
                    <Vigente>SI</Vigente>
                    <CodigoGuia>05606083</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>CAMIONETA PASAJ.</Clase>
                    <Tipo>CX3 TOURING TP 2000CC R17</Tipo>
                    <Modelo>2019</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>79972820</NumeroDocumento>
                    <Asegurado>CARLOS YARZO YARZO VILLAMIZAR</Asegurado>
                    <ValorAsegurado>69100000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 24/1</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>890903938</NumeroDocumentoTomador>
                    <NombreTomador>BANCOLOMBIA S.A</NombreTomador>
                    <TipoDocumentoBeneficiario>NIT</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>BANCOLOMBIA S.A</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>890903938</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>451</CodigoCompania>
                    <NombreCompania>SURAMERICANA</NombreCompania>
                    <NumeroPoliza>40007696125</NumeroPoliza>
                    <Orden>10946</Orden>
                    <Placa>FYQ641</Placa>
                    <Motor>PE21229878</Motor>
                    <Chasis>JM7DK2W7AK1413106</Chasis>
                    <FechaVigencia>2019-02-11T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2020-02-11T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO / 11/02/20</Vigente>
                    <CodigoGuia>05606083</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>CAMIONETA PASAJ.</Clase>
                    <Tipo>CX3 TOURING TP 2000CC R17</Tipo>
                    <Modelo>2019</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>79972820</NumeroDocumento>
                    <Asegurado>VILLAMIZAR .  CARLOS YARZO</Asegurado>
                    <ValorAsegurado>75149999</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 365/1</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>8909039388</NumeroDocumentoTomador>
                    <NombreTomador>BANCOLOMBIA S.A.</NombreTomador>
                    <TipoDocumentoBeneficiario>NIT</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>BANCOLOMBIA S.A.</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>8909039388</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>451</CodigoCompania>
                    <NombreCompania>SURAMERICANA</NombreCompania>
                    <NumeroPoliza>769612510946</NumeroPoliza>
                    <Orden>2</Orden>
                    <Placa>FYQ641</Placa>
                    <Motor>PE21229878</Motor>
                    <Chasis>JM7DK2W7AK1413106</Chasis>
                    <FechaVigencia>2021-02-11T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2022-02-11T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>05606083</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>CAMIONETA PASAJ.</Clase>
                    <Tipo>CX3 TOURING TP 2000CC R17</Tipo>
                    <Modelo>2019</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>79972820</NumeroDocumento>
                    <Asegurado>CARLOS YARZO VILLAMIZAR</Asegurado>
                    <ValorAsegurado>69100000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 365/1</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>890903938</NumeroDocumentoTomador>
                    <NombreTomador>BANCOLOMBIA S.A.</NombreTomador>
                    <TipoDocumentoBeneficiario>NIT</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>BANCOLOMBIA S.A.</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>890903938</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoPolizasSisa>
                    <CodigoCompania>451</CodigoCompania>
                    <NombreCompania>SURAMERICANA</NombreCompania>
                    <NumeroPoliza>769612510946</NumeroPoliza>
                    <Orden>1</Orden>
                    <Placa>FYQ641</Placa>
                    <Motor>PE21229878</Motor>
                    <Chasis>JM7DK2W7AK1413106</Chasis>
                    <FechaVigencia>2020-02-11T00:00:00.0</FechaVigencia>
                    <FechaFinVigencia>2021-02-11T00:00:00.0</FechaFinVigencia>
                    <Vigente>NO</Vigente>
                    <CodigoGuia>05606083</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>CAMIONETA PASAJ.</Clase>
                    <Tipo>CX3 TOURING TP 2000CC R17</Tipo>
                    <Modelo>2019</Modelo>
                    <Servicio>PARTICULAR</Servicio>
                    <TipoDocumentoAsegurado>CC</TipoDocumentoAsegurado>
                    <NumeroDocumento>79972820</NumeroDocumento>
                    <Asegurado>CARLOS YARZO VILLAMIZAR</Asegurado>
                    <ValorAsegurado>69500000</ValorAsegurado>
                    <PTD>SI</PTD>
                    <PPD>SI</PPD>
                    <PH>SI</PH>
                    <PPH>SI</PPH>
                    <RC>SI</RC>
                    <TipoCruce>Cruzo por placa  - 366/1</TipoCruce>
                    <TipoDocumentoTomador>NIT</TipoDocumentoTomador>
                    <NumeroDocumentoTomador>890903938</NumeroDocumentoTomador>
                    <NombreTomador>BANCOLOMBIA S.A.</NombreTomador>
                    <TipoDocumentoBeneficiario>NIT</TipoDocumentoBeneficiario>
                    <NombreBeneficiario>BANCOLOMBIA S.A.</NombreBeneficiario>
                    <NumeroDocumentoBeneficiario>890903938</NumeroDocumentoBeneficiario>
                </historicoPolizasSisa>
                <historicoSiniestrosSisa>
                    <CodigoCompania>451</CodigoCompania>
                    <NombreCompania>SURAMERICANA</NombreCompania>
                    <NumeroSiniestro>9210000482755</NumeroSiniestro>
                    <NumeroPoliza>769612510946</NumeroPoliza>
                    <Orden>2</Orden>
                    <Placa>FYQ641</Placa>
                    <Motor>PE21229878</Motor>
                    <Chasis>JM7DK2W7AK1413106</Chasis>
                    <FechaSiniestro>2021-10-13T00:00:00.0</FechaSiniestro>
                    <CodigoGuia>05606083</CodigoGuia>
                    <Marca>MAZDA</Marca>
                    <Clase>CAMIONETA PASAJ.</Clase>
                    <Tipo>CX3 TOURING TP 2000CC R17</Tipo>
                    <Modelo>2019</Modelo>
                    <TipoDocumentoAsegurado>CÉDULA DE CIUDADANIA</TipoDocumentoAsegurado>
                    <NumeroDocumento>79972820</NumeroDocumento>
                    <Asegurado>CARLOS YARZO YARZO VILLAMIZAR</Asegurado>
                    <ValorAsegurado>0</ValorAsegurado>
                    <TipoCruce>Cruzo por placa </TipoCruce>
                    <Amparos>
                        <CodigoCompania>451</CodigoCompania>
                        <NumeroSiniestro>9210000482755</NumeroSiniestro>
                        <FechaSiniestro>2021-10-13T00:00:00.0</FechaSiniestro>
                        <Placa>FYQ641</Placa>
                        <Estado>AVISADO</Estado>
                        <NombreAmparado>PPD</NombreAmparado>
                        <ValorReclamaAmparo>2394275</ValorReclamaAmparo>
                        <ValorPagadoAmparo>0</ValorPagadoAmparo>
                        <FechaAviso>2021-10-13T00:00:00.0</FechaAviso>
                    </Amparos>
                    <Amparos>
                        <CodigoCompania>451</CodigoCompania>
                        <NumeroSiniestro>9210000482755</NumeroSiniestro>
                        <FechaSiniestro>2021-10-13T00:00:00.0</FechaSiniestro>
                        <Placa>FYQ641</Placa>
                        <Estado>AVISADO</Estado>
                        <NombreAmparado>RC BIENES</NombreAmparado>
                        <ValorReclamaAmparo>120000</ValorReclamaAmparo>
                        <ValorPagadoAmparo>120000</ValorPagadoAmparo>
                        <FechaAviso>2021-10-13T00:00:00.0</FechaAviso>
                    </Amparos>
                </historicoSiniestrosSisa>
                <codigoWMISisa>
                    <CodigoWMI>JM7</CodigoWMI>
                    <NombreFabricante>Mazda Motor Corp</NombreFabricante>
                    <Direccion1Fabricante>Seats &amp; Occupant Protection Sys Dev Gr</Direccion1Fabricante>
                    <Direccion2Fabricante>3-1 Shinchi Fuchu-Cho Aki-Gun</Direccion2Fabricante>
                    <FechaCreacion>1984-04-24T00:00:00.0</FechaCreacion>
                    <FechaModificacion>1984-04-24T00:00:00.0</FechaModificacion>
                    <Pais>Japan</Pais>
                </codigoWMISisa>
                <guiaSisa>
                    <Marca>MAZDA</Marca>
                    <Clase>CAMIONETA PASAJ.</Clase>
                    <Tipo>CX3 TOURING TP 2000CC R17</Tipo>
                    <Modelo>2019</Modelo>
                    <ValorActual>73600000</ValorActual>
                    <ValorInicio>73600000</ValorInicio>
                    <FechaGuia>february/2022</FechaGuia>
                    <CodigoGuia>05606083</CodigoGuia>
                    <Guia>306</Guia>
                </guiaSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2019-04-28T00:00:00.0</FechaComparendo>
                    <Numero>11001000000023292429</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>258700</Valor>
                    <CodigoInfraccion>C31 No acatar las señales de tránsito o requerimientos impartidos por los agentes de tránsito.</CodigoInfraccion>
                    <ValorInfraccion>414100</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2016-09-29T00:00:00.0</FechaComparendo>
                    <Numero>11001000000013151084</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>215400</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>344700</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2016-07-14T00:00:00.0</FechaComparendo>
                    <Numero>11001000000013014612</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>215400</Valor>
                    <CodigoInfraccion>C31 No acatar las señales de tránsito o requerimientos impartidos por los agentes de tránsito.</CodigoInfraccion>
                    <ValorInfraccion>344700</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2014-08-27T00:00:00.0</FechaComparendo>
                    <Numero>11001000000008076486</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>C24 Conducir motocicleta sin observar las normas establecidas en el presente código.</CodigoInfraccion>
                    <ValorInfraccion>308000</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2013-01-19T00:00:00.0</FechaComparendo>
                    <Numero>11001000000004287421</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>C06 No utilizar el cinturón de seguridad por parte de los ocupantes del vehículo y los cinturones de seguridad en los asientos traseros en los vehículos fabricados a partir del año 2004.</CodigoInfraccion>
                    <ValorInfraccion>294800</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2012-11-11T00:00:00.0</FechaComparendo>
                    <Numero>11001000000003187530</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>D04 No detenerse ante una luz roja o amarilla de semáforo, una señal de PARE o un semáforo intermitente en rojo.</CodigoInfraccion>
                    <ValorInfraccion>566700</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2012-07-14T00:00:00.0</FechaComparendo>
                    <Numero>11001000000003096669</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>C29 Conducir un vehículo a velocidad superior a la máxima permitida.</CodigoInfraccion>
                    <ValorInfraccion>283400</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2012-03-12T00:00:00.0</FechaComparendo>
                    <Numero>11001000000001758838</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>283400</Valor>
                    <CodigoInfraccion>C14 Transitar por sitios restringidos o en horas prohibidas por la autoridad competente. además, el vehículo será inmovilizado.</CodigoInfraccion>
                    <ValorInfraccion>283400</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2011-12-31T00:00:00.0</FechaComparendo>
                    <Numero>11001000000001712843</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>B22 Llevar niños menores de diez (10) años en el asiento delantero.</CodigoInfraccion>
                    <ValorInfraccion>142800</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>11001000 Bogotá D.C.</Secretaria>
                    <FechaComparendo>2011-08-10T00:00:00.0</FechaComparendo>
                    <Numero>1320922</Numero>
                    <FechaResolucion>0001-01-01T00:00:00.0</FechaResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>No vigente</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>0</Valor>
                    <CodigoInfraccion>73 Usar sistemas móviles de comunicación o teléfonos instalados en los vehículos al momento de conducir, exceptuando si estos son utilizados con accesorios o equipos auxiliares que permitan tener las manos libres.</CodigoInfraccion>
                    <ValorInfraccion>267800</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <SIMITSisa>
                    <Secretaria>Bogotá D.C.</Secretaria>
                    <FechaComparendo>1900-01-01T00:00:00.0</FechaComparendo>
                    <Numero>NO REPORTADO</Numero>
                    <Resolucion>2887103</Resolucion>
                    <FechaResolucion>2014-10-29T00:00:00.0</FechaResolucion>
                    <TipoResolucion>Resumen AP</TipoResolucion>
                    <Nombre>CARLOS YARZO VILLAMIZAR</Nombre>
                    <Estado>Pagado</Estado>
                    <ValorAdicional>0</ValorAdicional>
                    <Valor>507730</Valor>
                    <CodigoInfraccion>8 Transitar sin los dispositivos luminosos requeridos</CodigoInfraccion>
                    <ValorInfraccion>0</ValorInfraccion>
                    <Polca>N</Polca>
                </SIMITSisa>
                <analisisContinuidades>
                    <contiCambioCompania>false</contiCambioCompania>
                    <msgReglaCambioCompania>No cumple con la regla uso y tipo vehículo.</msgReglaCambioCompania>
                    <contiCambioAsegurado>false</contiCambioAsegurado>
                    <msgReglaCambioAsegurado>No cumple con la regla de compania.</msgReglaCambioAsegurado>
                </analisisContinuidades>
            </Data>
        </ns0:ConsultaSisaResponse>
    </S:Body>
</S:Envelope>